@import "constants";

body.dotmatrix {
  font-size: .8rem!important;
  background-image: none!important;
  background-color: $white;

  .heel {
    display: none;
  }

  header#top {
    .logo {
      opacity: 0;
    }

    .colors {
      display: none;
    }
  }

  a {
    color: $black;
    text-decoration: none;
    border-bottom: 1px solid $black;

    &:visited {
      color: $black;
    }
  }

  * {
    color: $black!important;
    background-color: $white!important;
  }

  #commandLine,
  #commandLineHints {
    span {
      background-color: $black;
      color: $aquamarine;
    }
    
    &.alertMode {
      opacity: 1;
      background: transparent;
      color: $black;
      border-top: 1px solid $black;

      div {
        color: $black;
      }

      button {
        u {
          text-decoration: none;
        }

        &.decline {
          background-color: $black!important;
          color: $white!important;

          u {
            border-bottom: 1px solid $white!important;
            background-color: $black!important;
            color: $white!important;
          }
        }

        &.confirm {
          background-color: $white;
          color: $black;
          border: 1px solid $black;

          u {
            border-bottom: 1px solid $black;
            background-color: $white;
            color: $black;
          }
        }
      }
    }
  }

  code, pre {
    background-color: transparent!important;
    padding-left: 0;

    &#dotmatrixHeader {
      display: block;
      font-weight: 800;
      margin-left: -.5rem;
      margin-top: 2rem;
    }
  }

  // This is a bit fragile, but will do until Zola hopefully starts
  // adding classes to highlighted code blocks.
  pre[style*="background-color:#393939"] {
    border-top: 1px dashed $black;
    border-bottom: 1px dashed $black;
    white-space: pre-wrap;

    span {
      color: $black!important;
    }
  }

  details {
    &.toc {
      summary {
        text-decoration: underline;

        &::marker {
          color: $white;
        }
      }
    }
  }

  h1 {
    display: none;
  }

  h2 {
    font-size: 1.2em;
    font-weight: 900;
    border-bottom: 1px solid $black;
    display: inline-block;

    a {
      text-decoration: none;

      &.anchor {
        display: none;
      }
    }
  }

  h3 {
    font-size: 1.1em;
  }

  blockquote {
    border-left: 2px solid $black;
  }

  nav {
    &.breadcrumbs {
      margin-top: -4.5rem;
      background: transparent!important;
      
      &::before {
        font-family: $paragraphFont;
        font-size: .9em;
        content: "SPITLO.COM: ";
      }

      .crumb {
        background: none;
        color: $black;

        &.current {
          border: none;
        }
      }
    }

    &.pager {
      display: none;
    }
  }

  footer#bottom {
    border-top: 1px dashed $black;

    .details {
      font-size: .9em;

      .detail {
        padding-left: 0;
      }
    }
    
    .hr {
      display: none;
    }

    .link.shadow {
      text-shadow: none;
    }
  }

  .icon {
    svg {
      fill: $black!important;
    }
  }

  #help.visible {
    opacity: 1;
  }

  #searchResults {
    border: 1px solid $black;
  }

  .project,
  .term {
    ul {
      li {
        background-color: $white;
        border: 1px dashed $black;
        box-shadow: none;
        // This does not work, but keep for now and investigate further:
        break-before: always;
        break-inside: avoid;

        h2 {
          font-size: .8rem;
          border-bottom: 1px solid $black;
        }

        span.label {
          color: $black!important;
        }

        svg {
          fill: $black!important;
        }

        .postedIn {
          display: none;
        }
      }
    }
  }

  ul {
    &.tagList, .projectList {
      li {
        background-color: $white;
        box-shadow: none;
        border: 1px dashed black;

        p {
          margin-top: 0;
        }

        span.icon {
          border: 0;

          svg {
            fill: $black;
          }
        }

        span.taxonomy {
          background-color: transparent;
          padding: 0;
        }
      }
    }

    &.meta {
      .label {
        color: $black;
      }
    }
  }

  mark {
    &.arrow {
      margin-right: 0;
      border-bottom: 2px solid $black;

      &::after {
        display: none;
      }
    }
  }

  .contentWrapper.looptober {
    a.download {
      border-bottom: 0;
    }

    span.timesig {
      background: transparent;
      color: $black;
    }

    .looper {
      border: 1px solid $black;
      padding: 6px;
    }
  }

  td:nth-child(1) {
    background-color: $white;
  }

  .taxonomy span.label {
    font-family: $paragraphFont!important;
  }

  .contentWrapper.home-2021-04-29 .introduction {
    background: $white;
    border: 1px dashed $black;
  }
}

@media print {
  header#top,
  footer#bottom,
  #commandLine,
  #commandLineHints {
    display: none;
  }

  ul.projectList {
    // This does no work, investigate!
    li {
      break-inside: avoid-page;
      break-after: auto;
      break-before: auto;
    }
  }
}

@media (max-width: 680px) {
  body.dotmatrix {
    header#top .logo {
      display: none!important;
    }

    nav.breadcrumbs {
      display: none;
    }

    pre#dotmatrixHeader {
      margin-top: 0;
    }
  }
}