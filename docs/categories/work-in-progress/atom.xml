<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Spitlo.com - Work in Progress</title>
    <link rel="self" type="application/atom+xml" href="https://spitlo.com/categories/work-in-progress/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://spitlo.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-10-01T00:00:00+00:00</updated>
    <id>https://spitlo.com/categories/work-in-progress/atom.xml</id>
    <entry xml:lang="en">
        <title>Looptober 2024</title>
        <published>2024-10-01T00:00:00+00:00</published>
        <updated>2024-10-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/music/looptober-2024/"/>
        <id>https://spitlo.com/music/looptober-2024/</id>
        
        <content type="html" xml:base="https://spitlo.com/music/looptober-2024/">&lt;p&gt;I decided to do looptober AGAIN! This year I will be using the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.woovebox.com&#x2F;&quot;&gt;Woovebox&lt;&#x2F;a&gt;. I bought it awhile back but I haven’t really given it a good try yet.&lt;&#x2F;p&gt;
&lt;p&gt;My prediction for this year is even more stuff in the same key, scale and BPM, because of how the Woovebox works. Or really because of how lazy I am. I really don’t like using bluetooth for transfer, so I won’t be backing up and resetting the Woovebox very often. That gives me at most 16 different sets of key&#x2F;scale&#x2F;BPM&#x2F;instrumentation. I will be reusing those I’m most happy with.&lt;&#x2F;p&gt;
&lt;p&gt;Another consequence of my dislike of bluetooth is I won’t be bouncing and exporting tracks off the Woovebox. I will record them straight to Reaper from the line out through a Rode AI-Micro. Hopefully this won’t effect the sound quality negatively.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;mark class=&quot;arrow&quot;&gt;NB&lt;&#x2F;mark&gt; These are made to be played in a loop, but if you only want a quick peek they are still playable using the &lt;code&gt;:play&lt;&#x2F;code&gt; command.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;mark class=&quot;arrow&quot;&gt;NB2&lt;&#x2F;mark&gt; Loops marked with X was not finished on time, but created and added later.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;01-lo-fi-wafers-86-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#01-lo-fi-wafers-86-bpm&quot; aria-label=&quot;Anchor link for: 01-lo-fi-wafers-86-bpm&quot;&gt;#&lt;&#x2F;a&gt;
01 - Lo-fi Wafers (86 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;3%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;3, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

I feel like I’ve heard this before.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-1&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;01-lo-fi-wafers.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-1&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-1&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-1&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-1&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-1&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;01-lo-fi-wafers.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-1&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;01-lo-fi-wafers.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;02-creepazoids-72-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#02-creepazoids-72-bpm&quot; aria-label=&quot;Anchor link for: 02-creepazoids-72-bpm&quot;&gt;#&lt;&#x2F;a&gt;
02 - Creepazoids (72 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;6%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;6, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Oh no, I forgot to change key!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-2&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;02-creepazoids.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-2&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-2&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-2&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-2&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-2&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;02-creepazoids.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-2&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;02-creepazoids.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;03-xpace-xploration-78-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#03-xpace-xploration-78-bpm&quot; aria-label=&quot;Anchor link for: 03-xpace-xploration-78-bpm&quot;&gt;#&lt;&#x2F;a&gt;
03 - Xpace Xploration (78 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;10%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;10, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Do you say Zavier or Exavier?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-3&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;03-xpace-xploration.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-3&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-3&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-3&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-3&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-3&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;03-xpace-xploration.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-3&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;03-xpace-xploration.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;04-noodletop-106-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#04-noodletop-106-bpm&quot; aria-label=&quot;Anchor link for: 04-noodletop-106-bpm&quot;&gt;#&lt;&#x2F;a&gt;
04 - Noodletop (106 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;13%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;13, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Hey! Friday! Time to move into triple digit BPMs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-4&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;04-noodletop.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-4&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-4&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-4&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-4&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-4&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;04-noodletop.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-4&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;04-noodletop.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;05-centipedes-83-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#05-centipedes-83-bpm&quot; aria-label=&quot;Anchor link for: 05-centipedes-83-bpm&quot;&gt;#&lt;&#x2F;a&gt;
05 - Centipedes (83 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;16%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;16, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Which sounds cooler, forcipules or toxicognaths? I think it’s a tie for me.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-5&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;05-centipedes.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-5&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-5&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-5&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-5&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-5&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;05-centipedes.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-5&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;05-centipedes.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;06-seven-and-one-80-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#06-seven-and-one-80-bpm&quot; aria-label=&quot;Anchor link for: 06-seven-and-one-80-bpm&quot;&gt;#&lt;&#x2F;a&gt;
06 - Seven and One (80 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;19%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;19, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Sundays are perfect for watching old Millennium episodes!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-6&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;06-seven-and-one.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-6&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-6&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-6&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-6&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-6&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;06-seven-and-one.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-6&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;06-seven-and-one.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;07-metasyntactic-variables-69-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#07-metasyntactic-variables-69-bpm&quot; aria-label=&quot;Anchor link for: 07-metasyntactic-variables-69-bpm&quot;&gt;#&lt;&#x2F;a&gt;
07 - Metasyntactic Variables (69 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;23%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;23, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

I guess I could have just named it “Foo Bar”.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-7&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;07-metasyntactic-variables.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-7&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-7&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-7&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-7&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-7&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;07-metasyntactic-variables.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-7&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;07-metasyntactic-variables.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;08-last-day-of-summer-113-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#08-last-day-of-summer-113-bpm&quot; aria-label=&quot;Anchor link for: 08-last-day-of-summer-113-bpm&quot;&gt;#&lt;&#x2F;a&gt;
08 - Last Day of Summer (113 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;26%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;26, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

More like the first day of autumn, actually.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-8&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;08-last-day-of-summer.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-8&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-8&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-8&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-8&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-8&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;08-last-day-of-summer.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-8&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;08-last-day-of-summer.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;09-flaky-bones-111-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#09-flaky-bones-111-bpm&quot; aria-label=&quot;Anchor link for: 09-flaky-bones-111-bpm&quot;&gt;#&lt;&#x2F;a&gt;
09 - Flaky Bones (111 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;29%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;29, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

I don’t even know what flaky bones are, but according to Reddit you should try Paraloid B72 if&#x2F;when it happens.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-9&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;09-flaky-bones.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-9&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-9&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-9&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-9&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-9&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;09-flaky-bones.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-9&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;09-flaky-bones.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;10-paraloid-72-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#10-paraloid-72-bpm&quot; aria-label=&quot;Anchor link for: 10-paraloid-72-bpm&quot;&gt;#&lt;&#x2F;a&gt;
10 - Paraloid (72 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;32%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;32, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

Apparently, this is the remedy for the mess yesterday.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-10&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;10-paraloid.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-10&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-10&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-10&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-10&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-10&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;10-paraloid.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-10&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;10-paraloid.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;11-southward-equinox-86-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#11-southward-equinox-86-bpm&quot; aria-label=&quot;Anchor link for: 11-southward-equinox-86-bpm&quot;&gt;#&lt;&#x2F;a&gt;
11 - Southward Equinox (86 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;35%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;35, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

I know it was several weeks ago, but we’re still feeling the effect, right?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-11&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;11-southward-equinox.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-11&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-11&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-11&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-11&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-11&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;11-southward-equinox.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-11&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;11-southward-equinox.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;12-daytime-travel-100-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#12-daytime-travel-100-bpm&quot; aria-label=&quot;Anchor link for: 12-daytime-travel-100-bpm&quot;&gt;#&lt;&#x2F;a&gt;
12 - Daytime Travel (100 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;39%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;39, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

If I close my eyes, the sun shining through my window feels almost tropical.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-12&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;12-daytime-travel.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-12&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-12&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-12&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-12&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-12&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;12-daytime-travel.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-12&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;12-daytime-travel.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
&lt;h3 id=&quot;13-where-cruise-ships-go-to-die-75-bpm&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#13-where-cruise-ships-go-to-die-75-bpm&quot; aria-label=&quot;Anchor link for: 13-where-cruise-ships-go-to-die-75-bpm&quot;&gt;#&lt;&#x2F;a&gt;
13 - Where Cruise Ships Go To Die (75 BPM) &lt;span class=&quot;timesig &quot;&gt;&lt;sup&gt;4&lt;&#x2F;sup&gt;&#x2F;&lt;sub&gt;4&lt;&#x2F;sub&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;progress circular &quot;&gt;
  
    &lt;svg viewBox=&quot;0 0 36 36&quot;&gt;
      
        &lt;title&gt;42%&lt;&#x2F;title&gt;
        &lt;path
          d=&quot;M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831&quot;
          stroke-dasharray=&quot;42, 100&quot;
        &#x2F;&gt;
        &lt;defs&gt;
          &lt;pattern id=&quot;raster&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;4&quot; height=&quot;4&quot; patternUnits=&quot;userSpaceOnUse&quot; &gt;
            &lt;line x1=&quot;0&quot; x2=&quot;1&quot; y1=&quot;0&quot; y2=&quot;1&quot; &#x2F;&gt;
          &lt;&#x2F;pattern&gt;
        &lt;&#x2F;defs&gt;
      
    &lt;&#x2F;svg&gt;
  
&lt;&#x2F;span&gt;

R.I.P Inspiration, Imagination and Fantasy. You gentle giants.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;div id=&quot;looper-13&quot; class=&quot;looper &quot;&gt;
  &lt;noscript&gt;
    &lt;audio loop controls src=&quot;&amp;#x2F;audio&amp;#x2F;looptober&amp;#x2F;2024&amp;#x2F;13-where-cruise-ships-go-to-die.mp3&quot;&gt;&lt;&#x2F;audio&gt;
  &lt;&#x2F;noscript&gt;
&lt;&#x2F;div&gt;

&lt;script type=&quot;module&quot;&gt;
  (async () =&gt; {
    let context
    let gainNode
    let source
    let isPlaying = false
    let vizType = &#x27;td&#x27;
    const avWidth = 200
    const avHeight = 40
    const avColors = [
      &#x27;#74edc4&#x27;, &#x2F;&#x2F; aquamarine
      &#x27;#8bd1cd&#x27;, &#x2F;&#x2F; lightSeagreen
      &#x27;#aa9f9f&#x27;, &#x2F;&#x2F; gray
      &#x27;#b1b098&#x27;, &#x2F;&#x2F; dirtyYellow
      &#x27;#b55603&#x27;, &#x2F;&#x2F; orange
      &#x27;#dfcece&#x27;, &#x2F;&#x2F; lightBrown
      &#x27;#e30000&#x27;, &#x2F;&#x2F; red
      &#x27;#ecffea&#x27;, &#x2F;&#x2F; honeydew
      &#x27;#fff1f1&#x27;, &#x2F;&#x2F; mutedPink
      &#x27;#fffcfc&#x27;, &#x2F;&#x2F; white
      &#x27;#fffffb&#x27;, &#x2F;&#x2F; lightWhite
    ]

    &#x2F;&#x2F; Set up player interface
    const playButton = document.createElement(&#x27;button&#x27;)
    playButton.id = &#x27;play-13&#x27;
    playButton.innerHTML = `
  
  &lt;span class=&quot;icon play small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Play&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M19.376 12.416L8.777 19.482A.5.5 0 0 1 8 19.066V4.934a.5.5 0 0 1 .777-.416l10.599 7.066a.5.5 0 0 1 0 .832z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    playButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Play loop&#x27;)
    
    const stopButton = document.createElement(&#x27;button&#x27;)
    stopButton.id = &#x27;stop-13&#x27;
    stopButton.innerHTML = `
  
  &lt;span class=&quot;icon stop small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Stop&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M6 5h12a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    stopButton.classList.add(&#x27;stop&#x27;)
    stopButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Stop loop&#x27;)
    
    const avCanvas = document.createElement(&#x27;canvas&#x27;)
    avCanvas.id = &#x27;av-13&#x27;
    avCanvas.setAttribute(&#x27;width&#x27;, avWidth)
    avCanvas.setAttribute(&#x27;height&#x27;, avHeight)
    avCanvas.setAttribute(&#x27;aria-label&#x27;, &#x27;Audio visualizer&#x27;)
    avCanvas.onclick = () =&gt; {
      if (isPlaying) {
        if (vizType === &#x27;fr&#x27;) {
          vizType = &#x27;td&#x27;
        } else {
          vizType = &#x27;fr&#x27;
        } 
      }
    }
    
    const muteButton = document.createElement(&#x27;button&#x27;)
    muteButton.id = &#x27;mute-13&#x27;
    muteButton.innerHTML = `
  
  &lt;span class=&quot;icon mute small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Mute&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    muteButton.classList.add(&#x27;mute&#x27;)
    muteButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Mute loop&#x27;)
    muteButton.addEventListener(&#x27;mousedown&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(0, context.currentTime)
      }
    })
    muteButton.addEventListener(&#x27;mouseup&#x27;, () =&gt; {
      if (source &amp;&amp; gainNode) {
        gainNode.gain.setValueAtTime(1, context.currentTime)
      }
    })
    
    const downloadButton = document.createElement(&#x27;a&#x27;)
    downloadButton.id = &#x27;download-13&#x27;
    downloadButton.innerHTML = `
  
  &lt;span class=&quot;icon download small&quot;&gt;
    
    
    &lt;svg xmlns=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;24&quot; height=&quot;24&quot;&gt;&lt;title&gt;Download&lt;&#x2F;title&gt;&lt;path fill=&quot;none&quot; d=&quot;M0 0h24v24H0z&quot;&#x2F;&gt;&lt;path d=&quot;M4 19h16v-7h2v8a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-8h2v7zM14 9h5l-7 7-7-7h5V3h4v6z&quot;&#x2F;&gt;&lt;&#x2F;svg&gt;

  &lt;&#x2F;span&gt;
`
    downloadButton.classList.add(&#x27;download&#x27;)
    downloadButton.setAttribute(&#x27;aria-label&#x27;, &#x27;Download loop&#x27;)
    downloadButton.setAttribute(&#x27;download&#x27;, &#x27;&#x27;)
    downloadButton.setAttribute(&#x27;href&#x27;, &#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;13-where-cruise-ships-go-to-die.mp3&#x27;)

    const loopWrapper = document.getElementById(&#x27;looper-13&#x27;)

    loopWrapper.appendChild(playButton)
    loopWrapper.appendChild(stopButton)
    loopWrapper.appendChild(avCanvas)
    loopWrapper.appendChild(muteButton)
    loopWrapper.appendChild(downloadButton)

    &#x2F;&#x2F; Get the canvas context for the audio visualizer
    const canvasContext = avCanvas.getContext(&#x27;2d&#x27;)
    &#x2F;&#x2F; And paint the baseline
    const clearAvCanvas = (baseline = true) =&gt; {
      canvasContext.fillStyle =
        document.querySelector(&#x27;html&#x27;).classList.contains(&#x27;light&#x27;)
          ? &#x27;#2d3238&#x27;
          : &#x27;#fffffb&#x27;
      canvasContext.clearRect(0, 0, avWidth, avHeight)
      if (baseline) {
        canvasContext.fillRect(0, avHeight &#x2F; 2, avWidth, 1)
      }
    }
    clearAvCanvas()

    playButton.addEventListener(&#x27;click&#x27;, async () =&gt; {
      &#x2F;&#x2F; Initialize audio
      context = new AudioContext()
      gainNode = context.createGain()
      &#x2F;&#x2F; Disable play and set loading class. We don’t want people to start
      &#x2F;&#x2F; multiple downloads&#x2F;plays accidentally.
      playButton.classList.add(&#x27;loading&#x27;)
      playButton.setAttribute(&#x27;disabled&#x27;, &#x27;disabled&#x27;)
      isPlaying = true

      &#x2F;&#x2F; Fetch audio file. Error handling? Perhaps later.
      let arrayBuffer
      try {
        arrayBuffer = await fetch(&#x27;https:&#x2F;&#x2F;spitlo.com&#x2F;audio&#x2F;looptober&#x2F;2024&#x2F;13-where-cruise-ships-go-to-die.mp3&#x27;)
          .then(response =&gt; response.arrayBuffer())
        &#x2F;&#x2F; Assume file is loaded. Remove loading class.
        playButton.classList.remove(&#x27;loading&#x27;)
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;loading&#x27;)
        return
      }
      
      &#x2F;&#x2F; Ok, do the buffer magic.
      const buffer = await context.decodeAudioData(arrayBuffer)
      const analyser = context.createAnalyser()
      source = context.createBufferSource()
      source.connect(gainNode)
      source.connect(analyser)
      gainNode.connect(context.destination)

      const amplitude = new Uint8Array(analyser.frequencyBinCount)

      const renderVisualization = () =&gt; {
        if (isPlaying) {
          requestAnimationFrame(renderVisualization)
        }

        if (vizType === &#x27;fr&#x27;) {
          if (analyser.getByteFrequencyData) {
            analyser.getByteFrequencyData(amplitude)
          }
        } else {
          if (analyser.getByteTimeDomainData) {
            analyser.getByteTimeDomainData(amplitude)
          }
        }

        clearAvCanvas(vizType === &#x27;fr&#x27; ? false : true)
        if (vizType === &#x27;td&#x27;) {
          &#x2F;&#x2F; &quot;Shuffle&quot; colors array. This will do for now, but we could also use
          &#x2F;&#x2F; `ampValue` to set the color, higher -&gt; red, lower -&gt; white&#x2F;green.
          avColors.push(avColors.shift())
        }
        for (let i = 0; i &lt; amplitude.length; i++) {
          const ampValue = amplitude[i] &#x2F; (vizType === &#x27;fr&#x27; ? 320 : 256)
          const y = avHeight - (avHeight * ampValue) - 1
          if (vizType === &#x27;td&#x27;) {
            canvasContext.fillStyle = `${avColors[0]}40`
            canvasContext.fillRect(i - 1, y - 1, 3, 3)
          }
          canvasContext.fillStyle = &#x27;#74edc4&#x27;
          canvasContext.fillRect(i, y, 1, 1)
        }
      }

      source.buffer = buffer
      source.loop = true

      playButton.classList.add(&#x27;playing&#x27;)
      try {
        source.start(0)
        renderVisualization()
      } catch(error) {
        console.error(&#x27;Could not load audio&#x27;, error)
        playButton.classList.remove(&#x27;playing&#x27;)
      } 
    })
    
    stopButton.addEventListener(&#x27;click&#x27;, () =&gt; {
      if (source) {
        playButton.classList.remove(&#x27;loading&#x27;, &#x27;playing&#x27;)
        playButton.removeAttribute(&#x27;disabled&#x27;)
        isPlaying = false
        requestAnimationFrame(clearAvCanvas)

        source.stop(0)
      }
    })
  })()

&lt;&#x2F;script&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>CTGOL</title>
        <published>2024-03-24T00:00:00+00:00</published>
        <updated>2024-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/ctgol/"/>
        <id>https://spitlo.com/code/ctgol/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/ctgol/">&lt;p&gt;Conway Twitty’s Game of Life is an experiment in sequencing. It’s an evolving step sequencer that follows the rules of Conway’s Game of Life. Each active cell will trigger a very short fragment of a Conway Twitty song.&lt;&#x2F;p&gt;
&lt;p&gt;It’s available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;ctgol&#x2F;&quot;&gt;spitlo.com&#x2F;ctgol&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Conway Twitty’s Game of Life is a part of a growing family of mostly useless sequencers. The family includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;pikseq&#x2F;&quot;&gt;PIKSEQ&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;pikseq&#x2F;&quot;&gt;spitlo.com&#x2F;pikseq&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;instructions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#instructions&quot; aria-label=&quot;Anchor link for: instructions&quot;&gt;#&lt;&#x2F;a&gt;
Instructions&lt;&#x2F;h2&gt;
&lt;p&gt;You can start by just clicking PLAY to check out the randomized pattern. Reload or click RANDOMIZE to generate a new one.&lt;&#x2F;p&gt;
&lt;p&gt;For more advanced stuff, try picking a pattern from the dropdown. This might give you some inspiration.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to experiment freely, click CLEAR to get an empty canvas. It’s a good idea to SAVE often, since a) your pattern will change while playing, and b) this is a pretty buggy sequencer :)&lt;&#x2F;p&gt;
&lt;p&gt;To help you place ticks, there are some keyboard modifiers. If you press &lt;code&gt;alt&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;option&lt;&#x2F;code&gt; while painting a tick, you will get a horizontal line. If you press &lt;code&gt;shift&lt;&#x2F;code&gt; while painting a tick, you will get a vertical line. Lines extend through all inactive ticks, so you can put a start and end tick and the line will cover the area between them. If you press &lt;code&gt;windows&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;command&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;meta&lt;&#x2F;code&gt; (depending on your OS) while drawing a line, the line will only paint every other tick.&lt;&#x2F;p&gt;
&lt;p&gt;You can enable kaleidoscope mode, either for the X axis, the Y axis, or both. This will mirror the ticks you paint horizontally, vertically or both.&lt;&#x2F;p&gt;
&lt;p&gt;While playing, you can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track letter to the right of the track. To mute the drum loop, uncheck the box that says “Enable drum loop”.&lt;&#x2F;p&gt;
&lt;p&gt;To preview what a track sounds like, click the name on the right side of the track. This will play the sound that track represents.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>PIKSEQ</title>
        <published>2024-03-24T00:00:00+00:00</published>
        <updated>2024-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/pikseq/"/>
        <id>https://spitlo.com/code/pikseq/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/pikseq/">&lt;p&gt;PIKSEQ is an experiment in sequencing. It’s sort of a mix between a pixel art editor and a sequencer.&lt;&#x2F;p&gt;
&lt;p&gt;PIKSEQ is available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;pikseq&#x2F;&quot;&gt;spitlo.com&#x2F;pikseq&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;PIKSEQ also has a sibling, &lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;, and a cousin, &lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You pick a color by clicking the color buttons or by pressing keys &lt;code&gt;1&lt;&#x2F;code&gt; to &lt;code&gt;9&lt;&#x2F;code&gt;. Then start painting! You can only paint by clicking one pixel at a time, sorry :( It’s more like Lego and less like painting.&lt;&#x2F;p&gt;
&lt;p&gt;To help you paint more efficiently, there are some keyboard modifiers. If you press &lt;code&gt;alt&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;option&lt;&#x2F;code&gt; while painting a pixel, you will get a horizontal line. If you press &lt;code&gt;shift&lt;&#x2F;code&gt; while painting a pixel, you will get a vertical line. Lines extend through all pixels of the same color, so you can put a start and end pixel and the line will cover the area between them. If you press &lt;code&gt;windows&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;command&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;meta&lt;&#x2F;code&gt; (depending on your OS) at the same time, the line will only paint every other pixel.&lt;&#x2F;p&gt;
&lt;p&gt;You can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track note.&lt;&#x2F;p&gt;
&lt;p&gt;There are also a few different palettes to choose from.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sikwent</title>
        <published>2024-03-13T00:00:00+00:00</published>
        <updated>2024-03-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/sikwent/"/>
        <id>https://spitlo.com/code/sikwent/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/sikwent/">&lt;p&gt;Sikwent (actually &lt;code&gt;&#x2F;&#x27;siːkwənt&#x2F;&lt;&#x2F;code&gt; but my fonts don’t have all the needed glyphs) is an experiment in sequencing. The idea is that every new track that is added have one more “tick” than the one before. Ticks are sixteenth notes.&lt;&#x2F;p&gt;
&lt;p&gt;Sikwent is available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Sikwent also has a sibling of sorts, &lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You start with a single track with a single tick (checkbox). To add a track, you must first activate a tick in the current one. As soon as you do, a new track becomes available. Deactivating every tick in a higher track won’t delete the channels below.&lt;&#x2F;p&gt;
&lt;p&gt;You can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track name.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A Musician’s Journey</title>
        <published>2023-05-27T00:00:00+00:00</published>
        <updated>2023-05-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/music/a-musicians-journey/"/>
        <id>https://spitlo.com/music/a-musicians-journey/</id>
        
        <content type="html" xml:base="https://spitlo.com/music/a-musicians-journey/">&lt;p&gt;I wanted to try out &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;suno-ai&#x2F;bark&quot;&gt;Bark&lt;&#x2F;a&gt;, a transformer-based text-to-audio model by Suno.&lt;&#x2F;p&gt;
&lt;p&gt;I had some unused lyrics lying around, so I created a python script that fed it, line for line, to Bark. The script takes a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;suno-ai&#x2F;bark#supported-languages&quot;&gt;language&lt;&#x2F;a&gt; and a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;suno-ai.notion.site&#x2F;8b8e8749ed514b0cbf3f699013548683?v=bc67cff786b04b50b3ceb756fd05f68c&quot;&gt;voice number&lt;&#x2F;a&gt; as arguments, and an optional folder name. The generated file gets saved to a folder named for the verse and line (e.g. &lt;code&gt;verse1_line4&lt;&#x2F;code&gt;), and the filename indicates the language and voice used.&lt;&#x2F;p&gt;
&lt;p&gt;When generating the audio, I surrounded each line with &lt;code&gt;♪&lt;&#x2F;code&gt;, which has a special meaning to Bark. It tells it to generate the prompt as music. This sometimes leads to the line being “sung”, often poorly, and sometimes generates a full piece of realistic music. Sometimes it’s something in between.&lt;&#x2F;p&gt;
&lt;p&gt;After generating &lt;strong&gt;a bunch&lt;&#x2F;strong&gt; of files for English, Korean, Turkish, Spanish etc (Bark usually generates the audio in broken english if the prompt is in english and the language is not), I went through all the folders, picked the “samples” I liked the best, and imported them into Reaper. I set an arbitrary limit of using five samples per line of text, and then I started layering. Most samples are used basically as is (apart from volume, splits and start&#x2F;end point) but a tiny amount were slightly time stretched or pitched.&lt;&#x2F;p&gt;
&lt;p&gt;I added a little reverb to each of the ten resulting tracks, picking presets pseudo-randomly. The panning for each track is also pseudo-random (a little to the left, a little to the right, a little to the left etc.)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-script&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-script&quot; aria-label=&quot;Anchor link for: the-script&quot;&gt;#&lt;&#x2F;a&gt;
The script&lt;&#x2F;h2&gt;
&lt;p&gt;Below is the Python script I used to generate the files. It’s pretty specific to this task, but it would be trivial to make it more general (adding the possibility to supply a text file argument for example).&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; class=&quot;language-python z-code&quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;environ&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;SUNO_ENABLE_MPS&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;True&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Needed?
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;random&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;torch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;bark&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;SAMPLE_RATE&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-import-list z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;generate_audio&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-import-list z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;preload_models&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;scipy&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;io&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;wavfile&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;write&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-import z-as z-python&quot;&gt;as&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;write_wav&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;torch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;device&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;mps&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Defaults
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;en&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;voice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;6&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_folder&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;blacksheep&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;history_prompt&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;v2&#x2F;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;_speaker_&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;voice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Each verse is a string in this list. Each line is separated with a newline character.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;text_prompts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;Baa, baa black sheep &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;Have you any wool &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;Yes sir, yes sir &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;Three bags full&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;One for my master &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;And one for my dame &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;And one for the little boy &lt;span class=&quot;z-constant z-character z-escape z-python&quot;&gt;\n&lt;&#x2F;span&gt;Who lives down the lane&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;expressions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[laughter]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[laughs]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[sighs]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[music]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[gasps]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;  &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;[clears throat]&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-sequence z-list z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-sequence z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Perhaps this should be optional?
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;len&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;Please supply language and voice arguments. Folder name is optional.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;quit&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-conditional z-else z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-else z-python&quot;&gt;else&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-else z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;voice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;2&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Base folder is optional
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;len&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_folder&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;sys&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;argv&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-begin z-python&quot;&gt;[&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-arguments z-python&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;3&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-item-access z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-brackets z-end z-python&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;exists&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_folder&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;makedirs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_folder&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;Hang on, preloading models...&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;preload_models&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;text_prompts&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-augmented z-python&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;0&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-loop z-for z-python&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-loop z-for z-in z-python&quot;&gt;in&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;splitlines&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-loop z-for z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-block z-loop z-for z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-augmented z-python&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Add a little extra expression sometimes
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;expression&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;random&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;random&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-python&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-python&quot;&gt;.&lt;&#x2F;span&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;expression&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;random&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;choice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;expressions&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Generate the audio
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;audio_array&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;generate_audio&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; ♪ &lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; ♪&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;expression&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Set folder name and create it if it doesn’t exist
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;folder_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;verse&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;_line&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;full_path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;base_folder&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;folder_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-python&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;exists&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;full_path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;    &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;os&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;makedirs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;full_path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Save to disk
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;filename&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;voice-&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;_verse-&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;_line-&lt;span class=&quot;z-constant z-other z-placeholder z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-placeholder z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;.wav&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;format&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;full_path&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;lang&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;voice&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;verse_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;    &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;line_number&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;  &lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;write_wav&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;filename&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-python&quot;&gt;SAMPLE_RATE&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-arguments z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;audio_array&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;the-lyrics&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-lyrics&quot; aria-label=&quot;Anchor link for: the-lyrics&quot;&gt;#&lt;&#x2F;a&gt;
The lyrics&lt;&#x2F;h2&gt;
&lt;p&gt;These are the stupid lyrics&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;He started out playing bass for The Foregone Conclusions
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But he left in a week, that was a foregone conclusion
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;And he switched to playing piano with The Four Bar Blueses,
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Stuck behind a piano playing four bar blueses
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;So he learned the guitar and he joined The Riffs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Happy getting solos but annoyed with the riffs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Played percussion over summer for The Vibraslaps
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But his hands got kinda caloused from those vibra slaps
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Back to the bass in a band called The Bluff
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Swore he could slap but the band called the bluff
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Was a backup singer for The Break-ups
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But he pulled up his stakes before the inevitable break-up
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Was a manager a while for The Snowflakes
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But he rage quit – Saying “Y’all a bunch of snowflakes”
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Then he toured for a while with The Elderly Statesmen
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But they snored when they slept like som elderly statesmen
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Played the sax for a while in The Phenomenal Mess
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But he quit because their style was a phenomenal mess
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Played a little tambo for The Very Legits
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;But the pay wasn’t shit it wasn’t very legit
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;So he played the ocarina with Sha-ronne and the PJs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Got fired when he eyeballed Sha-ronne in her PJs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Finally he started a small woodwind combo
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Just him and his sax was a would-win combo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;the-result&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-result&quot; aria-label=&quot;Anchor link for: the-result&quot;&gt;#&lt;&#x2F;a&gt;
The result&lt;&#x2F;h2&gt;
&lt;p&gt;The resulting audio can be downloaded from the link below, or you can use the &lt;code&gt;:play&lt;&#x2F;code&gt; command to play it directly in your browser.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;mp3&#x2F;spitlo_-_a-musicians-journey-1.1.mp3&quot;&gt;A Musician’s Journey 1.1&lt;&#x2F;a&gt; (05:19, 10,2 MB)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;changelog&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#changelog&quot; aria-label=&quot;Anchor link for: changelog&quot;&gt;#&lt;&#x2F;a&gt;
Changelog&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;v1.1 Decrease volume on intro&lt;&#x2F;li&gt;
&lt;li&gt;v1.0 Initial release&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Space</title>
        <published>2023-01-28T00:00:00+00:00</published>
        <updated>2023-01-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/space/"/>
        <id>https://spitlo.com/code/space/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/space/">&lt;p&gt;Space is some kind of generative ambient music machine inspired by a bunch of tiling images I created using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brycedrennan&#x2F;imaginAIry&#x2F;&quot;&gt;ImaginAIry&lt;&#x2F;a&gt;. It’s available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Space also has a sibling of sorts, &lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-look&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-look&quot; aria-label=&quot;Anchor link for: the-look&quot;&gt;#&lt;&#x2F;a&gt;
The look&lt;&#x2F;h2&gt;
&lt;p&gt;Background images are picked at random on load, from a bank of about 80. The spinning logo thing is done with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;metafizzy&#x2F;zdog&quot;&gt;Zdog&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaames&#x2F;zfont&quot;&gt;Zfont&lt;&#x2F;a&gt;. Colors are extracted from the current background image using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vibrant-Colors&#x2F;node-vibrant&quot;&gt;node-vibrant&lt;&#x2F;a&gt;. Random song and band names are based on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tirdadc&#x2F;synthwave&quot;&gt;Synthgen 2000&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-sound&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-sound&quot; aria-label=&quot;Anchor link for: the-sound&quot;&gt;#&lt;&#x2F;a&gt;
The sound&lt;&#x2F;h2&gt;
&lt;p&gt;The “music” is generated with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Tonejs&#x2F;Tone.js&quot;&gt;Tone.js&lt;&#x2F;a&gt;, mostly from samples created with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;spaces&#x2F;harmonai&#x2F;dance-diffusion&quot;&gt;Dance Diffusion&lt;&#x2F;a&gt; using the &lt;code&gt;glitch-440k&lt;&#x2F;code&gt; model and then automatically split on transients.&lt;&#x2F;p&gt;
&lt;p&gt;The samples are organized in kits, of which there are nine at the moment. Kits one through six contain the Dance Diffusion samples, kits seven through nine contain more traditional drum sounds of the 707&#x2F;808&#x2F;909 variety, and some keys. Those kits are generally more pleasant to listen to, but since the kits are chosen at random on load, Space is only pleasant about every third visit.&lt;&#x2F;p&gt;
&lt;p&gt;Each sample in a kit is represented by a channel. On load, a pattern is semi-randomly set on each channel. As long as “Auto-evolve” is ticked, this pattern will change over time, creating a never*-repeating soundscape.
(* Never as in “very seldom”)&lt;&#x2F;p&gt;
&lt;p&gt;If you want to create your own sequence, simply clear the playing sequence, disable auto-evolve and create your own sequence by clicking the corresponding dots.&lt;&#x2F;p&gt;
&lt;p&gt;Hitting “Save” will save the current state of your composition in the URL, copy it from the address bar to share or to keep it safe somewhere. Or bookmark it!&lt;&#x2F;p&gt;
&lt;p&gt;Channel 10 has a special role (no, it’s not a drum track, sorry MIDI heads) – every time a note is struck on it, it either plays the sample for that track, or a short sine note. The sine note is picked randomly on each play, from an array of notes (usually a scale) picked randomly on each load. The octave is also set randomly for each note, ranging from 2 to 7. Finally, the duration is set randomly from an eighth note to a sixty-fourth note, with shorter notes being a bit more likely.&lt;&#x2F;p&gt;
&lt;p&gt;The prompt for ImaginAIry – for anyone interested – was “70’s sci-fi landscape”, the full command was:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;imagine&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;70&amp;#39;s sci-fi landscape&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;w&lt;&#x2F;span&gt; 1024&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;h&lt;&#x2F;span&gt; 256&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; 100&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;tile&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then I went for a walk while that toasted my battery. From those one hundred images I picked the 78 I liked the best.&lt;&#x2F;p&gt;
&lt;p&gt;Another way to toast your battery is to leave Space running in an open browser tab :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Morsh</title>
        <published>2022-03-23T00:00:00+00:00</published>
        <updated>2022-03-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/morsh/"/>
        <id>https://spitlo.com/code/morsh/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/morsh/">&lt;p&gt;A Bash script to decode&#x2F;encode morse code. Slightly buggy and very, very slow. Could also be used as an extremely unpleasant way to uppercase text.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#installation&quot; aria-label=&quot;Anchor link for: installation&quot;&gt;#&lt;&#x2F;a&gt;
Installation&lt;&#x2F;h2&gt;
&lt;p&gt;Just put the &lt;code&gt;morsh&lt;&#x2F;code&gt; script in your &lt;code&gt;~&#x2F;bin&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fancy-installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fancy-installation&quot; aria-label=&quot;Anchor link for: fancy-installation&quot;&gt;#&lt;&#x2F;a&gt;
Fancy installation&lt;&#x2F;h2&gt;
&lt;p&gt;Clone the repo and put a symlink to the &lt;code&gt;morsh&lt;&#x2F;code&gt; script in your &lt;code&gt;~&#x2F;bin&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;usage-examples&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage-examples&quot; aria-label=&quot;Anchor link for: usage-examples&quot;&gt;#&lt;&#x2F;a&gt;
Usage examples&lt;&#x2F;h2&gt;
&lt;p&gt;Quickly decode a message from some ancient online puzzle game:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;morsh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;...- --- --- -.. --- --- &#x2F; -- .- --. .. -.-.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Awkwardly uppercase a sentence (removing punctuation, diacritics and fluff in the process):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-echo z-shell&quot;&gt;echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;I Have No Mouth, and I Must Scream&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;morsh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;e&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;morsh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;d&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Turn “Crime and Punishment” into something you can reliably broadcast to your entire neighborhood with a simple signal horn and some patience:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;curl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; https:&#x2F;&#x2F;gutenberg.org&#x2F;files&#x2F;2554&#x2F;2554-0.txt&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;morsh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;encode&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;less&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Derivata</title>
        <published>2022-03-05T00:00:00+00:00</published>
        <updated>2022-03-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/music/derivata/"/>
        <id>https://spitlo.com/music/derivata/</id>
        
        <content type="html" xml:base="https://spitlo.com/music/derivata/">&lt;p&gt;Derivata is a collaboration in the same vein as &lt;a href=&quot;&#x2F;music&#x2F;stromata&#x2F;&quot;&gt;Stromata&lt;&#x2F;a&gt;, but between Lolita Fatjo and me.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rules&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#rules&quot; aria-label=&quot;Anchor link for: rules&quot;&gt;#&lt;&#x2F;a&gt;
Rules&lt;&#x2F;h2&gt;
&lt;p&gt;The rules for Derivata are the same as those for &lt;a href=&quot;&#x2F;music&#x2F;stromata&#x2F;&quot;&gt;Stromata&lt;&#x2F;a&gt;, basically no rules except that the next iteration within a strain must build upon the previous in some way.&lt;&#x2F;p&gt;
&lt;p&gt;The first version, &lt;code&gt;a-000.mp3&lt;&#x2F;code&gt; was sent by Lolita Fatjo on 2022-01-24 at 06:49 CET.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;b-strain&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#b-strain&quot; aria-label=&quot;Anchor link for: b-strain&quot;&gt;#&lt;&#x2F;a&gt;
B Strain&lt;&#x2F;h2&gt;
&lt;p&gt;On January 4th, 2023, the B Strain was inititated by Spitlo.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;c-strain&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#c-strain&quot; aria-label=&quot;Anchor link for: c-strain&quot;&gt;#&lt;&#x2F;a&gt;
C Strain&lt;&#x2F;h2&gt;
&lt;p&gt;On January 25th, 2024, the C Strain was inititated by Lolita Fatjo.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#files&quot; aria-label=&quot;Anchor link for: files&quot;&gt;#&lt;&#x2F;a&gt;
Files&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;c-strain-2024&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#c-strain-2024&quot; aria-label=&quot;Anchor link for: c-strain-2024&quot;&gt;#&lt;&#x2F;a&gt;
C Strain, 2024&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;File&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Sent&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;By&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Duration&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Snippet (size)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-000.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-01-25 10:00&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:51&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-000.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-001.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-01-27 00:55&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:52&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-001.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-002.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-03-10 12:38&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:40&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-002.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-003.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-04-12 20:15&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:24&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-003.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-004.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-07-08 22:20&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:18&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-004.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-005.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-07-18 12:15&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:40&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-005.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-006.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-08-15 12:01&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:10&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-006.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;c-007.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2024-08-24 00:22&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;05:06&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;c-007.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;b-strain-2023&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#b-strain-2023&quot; aria-label=&quot;Anchor link for: b-strain-2023&quot;&gt;#&lt;&#x2F;a&gt;
B Strain, 2023&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;File&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Sent&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;By&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Duration&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Snippet (size)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-000.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-01-04 06:38&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:16&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-000.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-001.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-01-29 17:37&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:19&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-001.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-002.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-02-05 00:27&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:23&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-002.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-003.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-03-08 13:16&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:06&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-003.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-004.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-03-10 17:18&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:10&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-004.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-005.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-04-10 19:11&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:44&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-005.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-006.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-04-20 22:45&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:09&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-006.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-007.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-05-27 15:07&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:44&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-007.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-008.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-06-11 15:12&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:48&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-008.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-009.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-10-13 09:24&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:59&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-009.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-010.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-11-18 18:44&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:03&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-010.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-011.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-12-18 21:52&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:33&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-011.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-012.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2023-12-28 21:32&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:16&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;b-012.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;a-strain-2022&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#a-strain-2022&quot; aria-label=&quot;Anchor link for: a-strain-2022&quot;&gt;#&lt;&#x2F;a&gt;
A Strain, 2022&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;File&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Sent&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;By&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Duration&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Snippet (size)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-000.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-01-24 06:49&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:08&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-000.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-001.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-01-28 23:58&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:21&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-001.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-002.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-02-20 15:19&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:47&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-002.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-003.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-03-05 00:45&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:27&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-003.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;A-004.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-03-13 16:48&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:33&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-004.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-005.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-03-30 07:02&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:28&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-005.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-006.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-03-31 10:35&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:36&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-006.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-007.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-04-01 22:15&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:38&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-007.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-008.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-04-15 19:57&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:33&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-008.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-009.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-04-26 12:36&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:35&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-009.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-010.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-05-02 07:14&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:18&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-010.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-011.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-05-15 12:42&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;02:56&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-011.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-012.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-05-24 06:02&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:27&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-012.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-013.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-06-19 00:26&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:41&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-013.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a_014.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-07-03 19:30&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;L.F.&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:50&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a_014.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-015.mp3&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-07-26 16:50&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:27&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;derivata&#x2F;snippets&#x2F;a-015.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Karakter</title>
        <published>2021-04-06T00:00:00+00:00</published>
        <updated>2021-04-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/karakter/"/>
        <id>https://spitlo.com/code/karakter/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/karakter/">&lt;p&gt;Karakter is a Bash script that takes text input (either from a pipe, as plain text arguments or as a file) and adds a little character to the text by substituting visually similar glyphs for letters a-z and A-Z. I wrote it because I wanted to come up with a pretty basic cli that I could then convert to other languages that I’ve been wanting to try out, like &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.adaic.org&#x2F;&quot;&gt;Ada&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;fortran-lang.org&#x2F;&quot;&gt;Fortran&lt;&#x2F;a&gt;. I encourage everyone to not hold their breath for that though – at the moment there is a working (I think) version in &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;vlang.io&quot;&gt;V&lt;&#x2F;a&gt; and work-in-progress versions in &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;inko-lang.org&#x2F;&quot;&gt;Inko&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;nim-lang.org&#x2F;&quot;&gt;Nim&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;odin-lang.org&#x2F;&quot;&gt;Odin&lt;&#x2F;a&gt;, &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;vale.dev&#x2F;&quot;&gt;Vale&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ziglang.org&#x2F;&quot;&gt;Zig&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There is a default style that’s sort of a kitchen sink mix of very different looking glyphs, and then there’s five less eclectic styles, &lt;code&gt;¢џБ≡┎pμ∩κ&lt;&#x2F;code&gt;, &lt;code&gt;ƒάїгψłάľє&lt;&#x2F;code&gt;, &lt;code&gt;LŌŪĐMŌŪṪH&lt;&#x2F;code&gt;, &lt;code&gt;₥0₦€¥₸₳£₭&lt;&#x2F;code&gt; and &lt;code&gt;num83r5&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Most glyphs are chosen from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehmicky&#x2F;cross-platform-terminal-characters&quot;&gt;this list&lt;&#x2F;a&gt; of “All the characters that work on most terminals” so they should work on most terminals – the exception being the set “Moneytalk” which is made up entirely of currency symbols (plus &lt;code&gt;1&lt;&#x2F;code&gt; and &lt;code&gt;0&lt;&#x2F;code&gt;, of course) and is not guaranteed to work everywhere.&lt;&#x2F;p&gt;
&lt;p&gt;There are some other flags, but the project readme has more information.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;usage-examples&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage-examples&quot; aria-label=&quot;Anchor link for: usage-examples&quot;&gt;#&lt;&#x2F;a&gt;
Usage examples&lt;&#x2F;h2&gt;
&lt;p&gt;Generate a mildly elvish version of your name for an email signature using the Bash version:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;bash&#x2F;karakter&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;md&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;ft&lt;&#x2F;span&gt; John Doe&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Turn A Tale of Two Cities into a cyberpunk novel using the V version and read it comfortably in your terminal:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;curl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; https:&#x2F;&#x2F;www.gutenberg.org&#x2F;files&#x2F;98&#x2F;98-0.txt&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sed&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;s&#x2F;one thousand seven&#x2F;two thousand seven&#x2F;g&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;tr&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; a-z A-Z&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;v&#x2F;karakter&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; md&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;s&lt;&#x2F;span&gt; cp&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;less&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;output-examples&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-examples&quot; aria-label=&quot;Anchor link for: output-examples&quot;&gt;#&lt;&#x2F;a&gt;
Output examples&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;input-text&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#input-text&quot; aria-label=&quot;Anchor link for: input-text&quot;&gt;#&lt;&#x2F;a&gt;
Input text&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way – in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-low-default-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-low-default-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-low-default-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level low, default style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;It ŵas thє beșt оf timєs, їt was thє worst of times, it waș the αge of wisdom, it was the ąge of foolїshness, it was the epoch of belief, iț ώas łhe epо¢ђ of incredulity, it шas the seąson of Light, it was the seasфη of Đarkness, it was the șpring of hope, it waș țhe winter of despair, we ђαd everything beforє us, we haď nothing before us, ŵe werє a11 going dire¢t to Heaven, we werє all going dїrёct tћe other way – in shoѓt, the pєriod was so fаr 1ike the present period, that some of its nфisiest authoгiłies iηsisted оn ițs bєing recёived, for gooď оr for evїl, in țhe șuperlative degгeё of comparison only.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-medium-cyberpunk-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-medium-cyberpunk-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-medium-cyberpunk-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level medium, cyberpunk style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;It ш@s the bєsŁ of tim≡$, it w@s tHe шоrst of Łim≡$, it шas ŁH≡ аg≡ o⌠ w¡$ďøm, ī┪ ш@s thє ag≡ оf fo●lishπes$, iŁ шas Łhe ≡pø¢H ●f belıef, iŁ ша$ tHє ep●ch о⌠ :nc┍єďulity, īŁ wα$ ┪h≡ $ea$o∩ оf Ľi9ht, īŁ w@$ ŁHe sє@$■Π of Daяκπє$$, :Ł wα$ tHє $p┎īn9 о⌠ høp≡, iŁ ш@s tHe wint≡r of ďєsp@ıя, шє Hαd e▼eгy┪h¡∩g bє⌠оre u$, we Hαď ∩o┪H¡Πg 6єfoгє u$, шe шe┎e αll go¡π9 ďi┎≡ct ┪o He@▼en, we шє┍e a1l 9■iΠg ďir≡ct ŁHe o┪her ш@џ – ¡n $Hort, thє p≡г¡●ď was $o fаr lıke the p┎≡$e∩t pe┍ioď, tHat s●mє ■f it$ πoisie$┪ aμ┪Hor:t:≡s ins:steď ●n its b≡ın9 гec≡ived, fø┎ 9ø●d оr ⌠●r ≡▼ı1, in Łh≡ sup≡гlα┪īvє ďegr≡є о⌠ ¢ompaгıson o∩1y.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-high-fairytale-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-high-fairytale-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-high-fairytale-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level high, fairytale style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Ϊṫ шάș ṫђё вєșṫ ºḟ łΐṁєș, ΐł шάș łћё ώºѓșṫ фƒ țΐṁēș, ΐț ώάș ṫђё ąġē σƒ шΐșδσṁ, ΐṫ шάș ṫђє ąġё σƒ ƒооļїșћηєșș, їł шąș łђё єpºςђ ºƒ Бēļїēƒ, їṫ шąș ṫћё єpоςђ фḟ їņςѓєδΰľїłψ, їł ŵąș łђē șєąșфņ фḟ Ļїġђț, ΐł ŵąș łђё șёąșфņ ºḟ Ďąѓkņēșș, їł ώάș țђē șpгїηġ фḟ ђºpē, їṫ ŵąș ṫђє ŵїņțєѓ σḟ ďєșpαΐг, ώё ћαḋ ēνёѓџłћΐñġ вēƒσгє ΰș, шё ђάđ ησṫђΐηġ ḃёƒºѓё υș, ώё ŵєгē αļľ ġºїņġ ďΐѓєςł țф нєάνєη, ώє шєѓē άľļ ġфїņġ ďΐѓєςț ṫћē фṫћёг шąψ – ΐņ șћσѓṫ, ṫђē pёѓΐºđ ŵάș șº ƒάѓ ľΐkē țђё pгёșєñṫ pёѓїоδ, ṫћάł șºṁє оḟ ΐțș ñºΐșїєșł ąΰțћфѓїṫΐєș ΐñșїșłēď ºņ ΐłș Бєїņġ ѓēςёΐνēđ, ḟог ġºфđ σѓ ƒºг ēνΐľ, їη ṫђє șΰpєѓľάṫΐνē δєġѓєё ºḟ ςºṁpαгΐșоñ оņľψ.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-high-loudmouth-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-high-loudmouth-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-high-loudmouth-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level high, loudmouth style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ĪṪ ШĀȘ ṪHĒ ḂĒȘṪ ŌF ṪIMĒȘ, IṪ ШĀȘ ṪHĒ ШŌŔȘṪ ŌF ṪIMĒȘ, IṪ ШĀȘ ṪHĒ ĀGĒ ŌF ШIȘĐŌM, IṪ ШĀȘ ṪHĒ ĀGĒ ŌF FŌŌLIȘHПĒȘȘ, IṪ ШĀȘ ṪHĒ ĒРŌČH ŌF ḂĒLIĒF, IṪ ШĀȘ ṪHĒ ĒРŌČH ŌF IПČŔĒĐŪLIṪЏ, IṪ ШĀȘ ṪHĒ ȘĒĀȘŌП ŌF LIGHṪ, IṪ ШĀȘ ṪHĒ ȘĒĀȘŌП ŌF ĐĀŔЌПĒȘȘ, IṪ ШĀȘ ṪHĒ ȘРŔIПG ŌF HŌРĒ, IṪ ШĀȘ ṪHĒ ШIПṪĒŔ ŌF ĐĒȘРĀIŔ, ШĒ HĀĐ ĒVĒŔЏṪHIПG ḂĒFŌŔĒ ŪȘ, ШĒ HĀĐ ПŌṪHIПG ḂĒFŌŔĒ ŪȘ, ШĒ ШĒŔĒ ĀLL GŌIПG ĐIŔĒČṪ ṪŌ ĦĒĀVĒП, ШĒ ШĒŔĒ ĀLL GŌIПG ĐIŔĒČṪ ṪHĒ ŌṪHĒŔ ШĀЏ – IП ȘHŌŔṪ, ṪHĒ РĒŔIŌĐ ШĀȘ ȘŌ FĀŔ LIЌĒ ṪHĒ РŔĒȘĒПṪ РĒŔIŌĐ, ṪHĀṪ ȘŌMĒ ŌF IṪȘ ПŌIȘIĒȘṪ ĀŪṪHŌŔIṪIĒȘ IПȘIȘṪĒĐ ŌП IṪȘ ḂĒIПG ŔĒČĒIVĒĐ, FŌŔ GŌŌĐ ŌŔ FŌŔ ĒVIL, IП ṪHĒ ȘŪРĒŔLĀṪIVĒ ĐĒGŔĒĒ ŌF ČŌMРĀŔIȘŌП ŌПLЏ. 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-high-moneytalk-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-high-moneytalk-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-high-moneytalk-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level high, moneytalk style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;1₮ ₩₳$ ₺₶€ ฿€$₸ 0₣ ₮1₥€₷, 1₸ ₩₳$ ₺₶€ ₩0₹₷₺ 0₣ ₸1₥€$, 1₺ ₩₳$ ₸₶€ ₳₲€ 0₣ ₩1$₫0₥, 1₺ ₩₳$ ₺₶€ ₳₲€ 0₣ ₣00£1₷₶₪€₷$, 1₮ ₩₳$ ₸₶€ €₱0₵₶ 0₣ ৳€£1€₣, 1₸ ₩₳$ ₺₶€ €₱0₵₶ 0₣ 1₪₵₹€₫U£1₮¥, 1₺ ₩₳$ ₮₶€ ₷€₳₷0₪ 0₣ £1₲₶₸, 1₮ ₩₳₷ ₸₶€ ₷€₳₷0₪ 0₣ ₫₳₹₭₪€$$, 1₮ ₩₳$ ₮₶€ $₽₹1₦₲ 0₣ ₶0₱€, 1₮ ₩₳$ ₸₶€ ₩1₦₸€₹ 0₣ ₫€$₱₳1₹, ₩€ ₶₳₫ €V€₹¥₸₶1₦₲ ฿€₣0₹€ U$, ₩€ ₶₳₫ ₪0₺₶1₦₲ ৳€₣0₹€ U$, ₩€ ₩€₹€ ₳££ ₲01₪₲ ₫1₹€₵₺ ₸0 ₶€₳V€₦, ₩€ ₩€₹€ ₳££ ₲01₪₲ ₫1₹€₡₸ ₮₶€ 0₸₶€₹ ₩₳¥ – 1₪ $₶0₹₸, ₸₶€ ₽€₹10₫ ₩₳₷ ₷0 ₣₳₹ £1₭€ ₺₶€ ₽₹€₷€₪₮ ₱€₹10₫, ₸₳₮ $0₥€ 0₣ 1₸$ ₦01$1€$₮ ₳U₸₶0₹1₸1€$ 1₦₷1$₮€₫ 0₦ 1₸₷ ৳€1₦₲ ₹€₵€1V€₫, ₣0₹ ₲00₫ 0₹ ₣0₹ €V1£, 1₪ ₮₶€ ₷U₽€₹£₳₸1V€ ₫€₲₹€€ 0₣ ₡0₥₱₳₹1$0₦ 0₪£¥.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;output-text-obfuscation-level-medium-numbers-style&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#output-text-obfuscation-level-medium-numbers-style&quot; aria-label=&quot;Anchor link for: output-text-obfuscation-level-medium-numbers-style&quot;&gt;#&lt;&#x2F;a&gt;
Output text, obfuscation level medium, numbers style&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;It w4s th3 b35t 0f 71m35, 17 wa5 7he w0rst 0f time5, 1t w45 the 4ge of w1sdom, 17 wa5 7he 463 of f0olishness, 1t wa5 the 3poch 0f 83li3f, it w4s 7h3 3poch of incredulity, i7 w45 th3 s3450n of L1gh7, 1t w4s 7he s3450n 0f D4rkne55, i7 was 7he 5pring of hop3, i7 wa5 7h3 wint3r of desp4ir, w3 had 3very7h1n6 bef0re u5, we h4d noth1n6 8ef0r3 us, w3 w3r3 all g01ng direct t0 H34v3n, we w3re all 6o1n6 d1r3c7 7h3 0ther w4y – 1n 5h0rt, 7h3 per10d wa5 5o f4r l1ke the pre53nt per10d, 7h47 5om3 0f 1t5 n0i5ie5t 4uth0ri7ies 1nsis7ed 0n 175 8e1n6 r3ce1ved, for g00d 0r for 3v1l, 1n the sup3rl4tiv3 degre3 of comp4r15on only.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Stromata</title>
        <published>2021-03-26T00:00:00+00:00</published>
        <updated>2021-03-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/music/stromata/"/>
        <id>https://spitlo.com/music/stromata/</id>
        
        <content type="html" xml:base="https://spitlo.com/music/stromata/">&lt;p&gt;Stromata is a collaboration born out of boredom. It’s a form of musical tennis where me and &lt;em&gt;kryptho&lt;&#x2F;em&gt; sends a piece of music back and forth.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rules&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#rules&quot; aria-label=&quot;Anchor link for: rules&quot;&gt;#&lt;&#x2F;a&gt;
Rules&lt;&#x2F;h2&gt;
&lt;p&gt;Each iteration is a modified version of the previous version. The rules are pretty lax, basically:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;You must use the file you receive in some way&lt;&#x2F;li&gt;
&lt;li&gt;You must return a consistently and predictably named, playable file&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Other than that, anything goes. Examples of possible modifications (on a scale from pedestrian to hard core):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Convert to ogg, then back to original format&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Play it on your computer, record it on your phone&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Add harmonica&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Add harmonica and lyrics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Play it on your computer, record it to your phone while playing harmonica. Save as ogg&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Record the song to cassette, take the tape out and cut it to pieces. Glue it together again and put it back into the cassette. Record it (optionally saving it as ogg).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Print the file. Keep only the pages whose numbers are included in a Fibonacci sequence (you might use an extra copy of page one). Scan these pages. Somehow make a song from that.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Using a magnetoencephalography helmet, record your reactions to the song. Convert those readings to frequencies. Convert the frequencies to actual tones. Record the tones. Add reverb.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There are a lot of other modifications that are also possible&#x2F;desirable.&lt;&#x2F;p&gt;
&lt;p&gt;The first version, &lt;code&gt;a-000.wav&lt;&#x2F;code&gt; was sent on 2021-02-20 at 14:03 CET.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;b-strain&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#b-strain&quot; aria-label=&quot;Anchor link for: b-strain&quot;&gt;#&lt;&#x2F;a&gt;
B Strain&lt;&#x2F;h2&gt;
&lt;p&gt;On January 1st, 2022, the B Strain was initiated by Kryptho.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#files&quot; aria-label=&quot;Anchor link for: files&quot;&gt;#&lt;&#x2F;a&gt;
Files&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;b-strain-2022&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#b-strain-2022&quot; aria-label=&quot;Anchor link for: b-strain-2022&quot;&gt;#&lt;&#x2F;a&gt;
B Strain, 2022&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;File&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Sent&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;By&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Duration&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Snippet (size)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-000.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-01-01 11:25&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:41&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;b-000.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;b-001.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2022-01-14 16:46&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:09&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;b-001.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;a-strain-2021&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#a-strain-2021&quot; aria-label=&quot;Anchor link for: a-strain-2021&quot;&gt;#&lt;&#x2F;a&gt;
A Strain, 2021&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: left&quot;&gt;File&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Sent&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;By&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Duration&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Snippet (size)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-000.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-20 14:03&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:40&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-000.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-001.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-20 17:38&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:25&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-001.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-002.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-21 15:51&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:37&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-002.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-003.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-21 19:51&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:40&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-003.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-004.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-24 16:27&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:12&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-004.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-005.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-02-24 20:41&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:21&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-005.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-006.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-03-01 16:49&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:19&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-006.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-007.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-03-02 17:38&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:23&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-007.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-008.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-03-10 15:59&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:46&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-008.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-009.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-03-24 10:50&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:58&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-009.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-010.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-04-06 20:53&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;05:47&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-010.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-011.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-04-07 18:56&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:56&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-011.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-012.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-04-21 21:15&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;04:23&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-012.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-013.flac&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-05-31 19:19&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;kryptho&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:29&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-013.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (721 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: left&quot;&gt;a-014.wav&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;2021-07-06 22:47&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;spitlo&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;03:28&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;files.mefirst.se&#x2F;stromata&#x2F;snippets&#x2F;a-014.mp3&quot;&gt;mp3&lt;&#x2F;a&gt; (722 KB)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dotfiles</title>
        <published>2020-11-26T00:00:00+00:00</published>
        <updated>2020-11-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/dotfiles/"/>
        <id>https://spitlo.com/code/dotfiles/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/dotfiles/">&lt;p&gt;I keep most of my aliases, functions and config files in a dotfiles repo. They are currently used on one Mac running Monterey, one Mac running Pop!_OS Cosmic, one Raspberry Pi 400, an Android running Termux on LineageOS and on several instances of Ubuntu Server, so I try to make sure everything’s portable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this stuff probably only makes sense for me, but there are a few gems here and there that might be of use for others as well.&lt;&#x2F;p&gt;
&lt;p&gt;Below are a few of my most used functions&#x2F;aliases:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cdp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#cdp&quot; aria-label=&quot;Anchor link for: cdp&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L438-L484&quot;&gt;&lt;code&gt;cdp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This allows me to jump quickly into project folders. If the project contains an &lt;code&gt;.nvmrc&lt;&#x2F;code&gt; or &lt;code&gt;.python-version&lt;&#x2F;code&gt; file, the correct versions of &lt;code&gt;node&lt;&#x2F;code&gt; and &lt;code&gt;python&lt;&#x2F;code&gt; are set.&lt;&#x2F;p&gt;
&lt;p&gt;The function uses &lt;code&gt;$PROJECT_FOLDER&lt;&#x2F;code&gt; to know where to look. I set it in a file kept out of source control.&lt;&#x2F;p&gt;
&lt;p&gt;There is a corresponding &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;6f41ade4e2ff75e7ddb147d727ec8ad53917d87a&#x2F;.bash_completions&#x2F;cdp&quot;&gt;bash completion script&lt;&#x2F;a&gt;, so if I set &lt;code&gt;$LOCAL_PROJECTS&lt;&#x2F;code&gt; to a space separated string of project names, I get tab completion and can navigate EVEN QUICKER!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#xt&quot; aria-label=&quot;Anchor link for: xt&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L119-L156&quot;&gt;&lt;code&gt;xt&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This is so I never have to learn the flags for unrar, unzip, gunzip, tar et al. Cant’t remember where I got this function from initially, but here’s the obligatory &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;xkcd.com&#x2F;&quot;&gt;XKCD&lt;&#x2F;a&gt; strip:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;imgs.xkcd.com&#x2F;comics&#x2F;tar.png&quot; alt=&quot;XKCD: Tar&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qrab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#qrab&quot; aria-label=&quot;Anchor link for: qrab&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L706-L712&quot;&gt;&lt;code&gt;qrab&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This uses &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fukuchi&#x2F;libqrencode&quot;&gt;&lt;code&gt;qrencode&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to create a QR code from whatever is in the clipboard and print it to the terminal. Very helpful when I need to move small pieces of information from my laptop to my phone quickly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;weather&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#weather&quot; aria-label=&quot;Anchor link for: weather&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L771-L773&quot;&gt;&lt;code&gt;weather&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I can never remember where to &lt;code&gt;curl&lt;&#x2F;code&gt; the weather from and what query strings to use, so now I just run &lt;code&gt;weather london&lt;&#x2F;code&gt; to get the London weather in a compact form.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dict&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#dict&quot; aria-label=&quot;Anchor link for: dict&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L527-L531&quot;&gt;&lt;code&gt;dict&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Basically the same as &lt;code&gt;weather&lt;&#x2F;code&gt; but for dictionary definitions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;squash&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#squash&quot; aria-label=&quot;Anchor link for: squash&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;squash&quot;&gt;&lt;code&gt;squash&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I work on some projects that’s been around since the early 2010s, and I need a local clone, including all assets, for them to work properly when developing. So I need to keep gigs and gigs of images just lying about on my hard drive. But they don’t need to look pretty. So every once in a while I run:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;find&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .&#x2F;media&#x2F;images&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;xdev&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;name&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;*.jpg&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;mtime&lt;&#x2F;span&gt; +360&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;execdir&lt;&#x2F;span&gt; squash &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;squash&lt;&#x2F;code&gt; uses ImageMagicks’s &lt;code&gt;mogrify&lt;&#x2F;code&gt; to set the jpeg quality to one, then resets the file’s timestamp, to prevent possible overwrites when syncing with the production server. I can also run it with the environment variable &lt;code&gt;MINIMUM_SIZE&lt;&#x2F;code&gt; set, to only affect images of a significant size.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-tp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#update-tp&quot; aria-label=&quot;Anchor link for: update-tp&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;update-tp&quot;&gt;&lt;code&gt;update-tp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;update-tp&lt;&#x2F;code&gt; helps me to update a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termux&#x2F;termux-packages&quot;&gt;Termux package&lt;&#x2F;a&gt; in my fork, then create a consistently worded commit so I can do a PR. It’s pretty scary to contribute to popular projects and I want to make sure I get it right if I do.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#update&quot; aria-label=&quot;Anchor link for: update&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;update&quot;&gt;&lt;code&gt;update&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;update&lt;&#x2F;code&gt; helps me keep some commands fresh across platforms, often by downloading the latest release from Github or similar and moving it to &lt;code&gt;~&#x2F;bin&lt;&#x2F;code&gt;. This was mostly created out of frustration with the way Homebrew works on macOS, but I use it on Android (&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termux&#x2F;termux-app&quot;&gt;Termux&lt;&#x2F;a&gt;) and Linux as well. At the time of writing, &lt;code&gt;update&lt;&#x2F;code&gt; supports updating the following commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheZoraiz&#x2F;ascii-image-converter&quot;&gt;ascii-image-converter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;bat&quot;&gt;bat&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildegit.org&#x2F;sloum&#x2F;bombadillo&quot;&gt;bombadillo&lt;&#x2F;a&gt; (Broken at the time)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;schollz&#x2F;croc&quot;&gt;croc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dandavison&#x2F;delta&quot;&gt;delta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ogham&#x2F;exa&quot;&gt;exa&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;fzf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;climech&#x2F;grit&quot;&gt;grit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gron&quot;&gt;gron&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;curl&#x2F;h2c&quot;&gt;h2c&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;hyperfine&quot;&gt;hyperfine&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stedolan&#x2F;jq&quot;&gt;jq&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zyedidia&#x2F;micro&quot;&gt;micro&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denisidoro&#x2F;navi&quot;&gt;navi&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xwmx&#x2F;nb&quot;&gt;nb&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starship&#x2F;starship&quot;&gt;starship&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spaam&#x2F;svtplay-dl&quot;&gt;svtplay-dl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;errata-ai&#x2F;vale&quot;&gt;vale&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wp-cli&#x2F;wp-cli&quot;&gt;wp-cli&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yt-dlp&#x2F;yt-dlp&quot;&gt;yt-dlp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&quot;&gt;zola&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Spitlo.com</title>
        <published>2020-11-15T00:00:00+00:00</published>
        <updated>2020-11-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Spitlo
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/spitlo-com/"/>
        <id>https://spitlo.com/code/spitlo-com/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/spitlo-com/">&lt;p&gt;I made this site mainly to improve my HTML and UI skills, having done mostly React and back-end work the last few years.&lt;&#x2F;p&gt;
&lt;p&gt;I also wanted to try out &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; and get away from JavaScript for a while.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, it’s a nice low-stakes place to have some fun and try stuff out, for example:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Github Pages hosting with a custom domain name&lt;&#x2F;li&gt;
&lt;li&gt;Github Actions&lt;&#x2F;li&gt;
&lt;li&gt;Hand coded or programmatically generated SVGs&lt;&#x2F;li&gt;
&lt;li&gt;Undocumented CSS stuff like animating the &lt;code&gt;content&lt;&#x2F;code&gt; value of &lt;code&gt;::before&lt;&#x2F;code&gt; and &lt;code&gt;::after&lt;&#x2F;code&gt; pseudo-elements&lt;&#x2F;li&gt;
&lt;li&gt;Newer&#x2F;partially supported HTML elements like &lt;code&gt;&amp;lt;details&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Ever so slightly dipping my toes into the Rust ecosystem&lt;&#x2F;li&gt;
&lt;li&gt;Using AVIF&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;issues&#x2F;1202&quot;&gt;?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
