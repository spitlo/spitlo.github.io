<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Spitlo.com - JavaScript</title>
    <link rel="self" type="application/atom+xml" href="https://spitlo.com/technologies/javascript/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://spitlo.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-03-24T00:00:00+00:00</updated>
    <id>https://spitlo.com/technologies/javascript/atom.xml</id>
    <entry xml:lang="en">
        <title>Conway Twitty’s Game of Life</title>
        <published>2024-03-24T00:00:00+00:00</published>
        <updated>2024-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/ctgol/"/>
        <id>https://spitlo.com/code/ctgol/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/ctgol/">&lt;p&gt;Conway Twitty’s Game of Live is an experiment in sequencing. It’s an evolving step sequencer that follows the rules of Conway’s Game of Life.&lt;&#x2F;p&gt;
&lt;p&gt;It’s available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;ctgol&#x2F;&quot;&gt;spitlo.com&#x2F;ctgol&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Conway Twitty’s Game of Life is a part of a growing family of mostly useless sequencers. The family includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;pikseq&#x2F;&quot;&gt;PIKSEQ&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;pikseq&#x2F;&quot;&gt;spitlo.com&#x2F;pikseq&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;instructions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#instructions&quot; aria-label=&quot;Anchor link for: instructions&quot;&gt;#&lt;&#x2F;a&gt;
Instructions&lt;&#x2F;h2&gt;
&lt;p&gt;You can start by just clicking PLAY to check out the randomized pattern. Reload or click RANDOMIZE to generate a new one.&lt;&#x2F;p&gt;
&lt;p&gt;For more advanced stuff, try picking a pattern from the dropdown. This might give you some inspiration.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to experiment freely, click CLEAR to get an empty canvas. It’s a good idea to SAVE often, since a) your pattern will change while playing, and b) this is pretty buggy :)&lt;&#x2F;p&gt;
&lt;p&gt;To help you place ticks, there are some keyboard modifiers. If you press &lt;code&gt;alt&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;option&lt;&#x2F;code&gt; while painting a tick, you will get a horizontal line. If you press &lt;code&gt;shift&lt;&#x2F;code&gt; while painting a tick, you will get a vertical line. Lines extend through all inactive ticks, so you can put a start and end tick and the line will cover the area between them. If you press &lt;code&gt;windows&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;command&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;meta&lt;&#x2F;code&gt; (depending on your OS) while drawing a line, the line will only paint every other tick.&lt;&#x2F;p&gt;
&lt;p&gt;You can enable kaleidoscope mode, either for the X axis, the Y axis, or both. This will mirror your ticks horizontally, vertically or both.&lt;&#x2F;p&gt;
&lt;p&gt;While playing, you can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track letter to the right of the track. To mute the drum loop, uncheck th box that says “Enable drum loop”.&lt;&#x2F;p&gt;
&lt;p&gt;To preview a track, click on the name of the track to the right of the track. This will play the sound that track represents.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>PIKSEQ</title>
        <published>2024-03-24T00:00:00+00:00</published>
        <updated>2024-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/pikseq/"/>
        <id>https://spitlo.com/code/pikseq/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/pikseq/">&lt;p&gt;PIKSEQ is an experiment in sequencing. It’s sort of a mix between a pixel art editor and a sequencer.&lt;&#x2F;p&gt;
&lt;p&gt;PIKSEQ is available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;pikseq&#x2F;&quot;&gt;spitlo.com&#x2F;pikseq&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;PIKSEQ also has a sibling, &lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;, and a cousin, &lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You pick a color by clicking the color buttons or by pressing keys &lt;code&gt;1&lt;&#x2F;code&gt; to &lt;code&gt;9&lt;&#x2F;code&gt;. Then start painting! You can only paint by clicking a pixel at a time, sorry :( It’s more like Lego and less like painting.&lt;&#x2F;p&gt;
&lt;p&gt;To help you paint more efficiently, there are some keyboard modifiers. If you press &lt;code&gt;alt&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;option&lt;&#x2F;code&gt; while painting a pixel, you will get a horizontal line. If you press &lt;code&gt;shift&lt;&#x2F;code&gt; while painting a pixel, you will get a vertical line. Lines extend through all pixels of the same color, so you can put a start and end pixel and the line will cover the area between them. If you press &lt;code&gt;windows&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;command&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;meta&lt;&#x2F;code&gt; (depending on your OS) at the same time, the line will only paint every other pixel.&lt;&#x2F;p&gt;
&lt;p&gt;You can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track note.&lt;&#x2F;p&gt;
&lt;p&gt;There are also a few different palettes to choose from.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Sikwent</title>
        <published>2024-03-13T00:00:00+00:00</published>
        <updated>2024-03-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/sikwent/"/>
        <id>https://spitlo.com/code/sikwent/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/sikwent/">&lt;p&gt;Sikwent (actually &lt;code&gt;&#x2F;&#x27;siːkwənt&#x2F;&lt;&#x2F;code&gt; but my fonts don’t have all the needed glyphs) is an experiment in sequencing. The idea is that every new track that is added have one more “tick” than the one before. Ticks are sixteenth notes.&lt;&#x2F;p&gt;
&lt;p&gt;Sikwent is available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Sikwent also has a sibling of sorts, &lt;a href=&quot;&#x2F;code&#x2F;space&#x2F;&quot;&gt;Space&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You start with a single track with a single tick (checkbox). To add a track, you must first activate a tick in the current one. As soon as you do, a new track becomes available. Deactivating every tick in a higher track won’t delete the channels below.&lt;&#x2F;p&gt;
&lt;p&gt;You can mute individual tracks by using keys &lt;code&gt;a&lt;&#x2F;code&gt; to &lt;code&gt;z&lt;&#x2F;code&gt; on your keyboard. Or by clicking&#x2F;tapping the track name.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Space</title>
        <published>2023-01-28T00:00:00+00:00</published>
        <updated>2023-01-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/space/"/>
        <id>https://spitlo.com/code/space/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/space/">&lt;p&gt;Space is some kind of generative ambient music machine inspired by a bunch of tiling images I created using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brycedrennan&#x2F;imaginAIry&#x2F;&quot;&gt;ImaginAIry&lt;&#x2F;a&gt;. It’s available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;space&#x2F;&quot;&gt;spitlo.com&#x2F;space&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Space also has a sibling of sorts, &lt;a href=&quot;&#x2F;code&#x2F;sikwent&#x2F;&quot;&gt;Sikwent&lt;&#x2F;a&gt;, available online at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;spitlo.com&#x2F;sikwent&#x2F;&quot;&gt;spitlo.com&#x2F;sikwent&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-look&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-look&quot; aria-label=&quot;Anchor link for: the-look&quot;&gt;#&lt;&#x2F;a&gt;
The look&lt;&#x2F;h2&gt;
&lt;p&gt;Background images are picked at random on load, from a bank of about 80. The spinning logo thing is done with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;metafizzy&#x2F;zdog&quot;&gt;Zdog&lt;&#x2F;a&gt; and &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaames&#x2F;zfont&quot;&gt;Zfont&lt;&#x2F;a&gt;. Colors are extracted from the current background image using &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vibrant-Colors&#x2F;node-vibrant&quot;&gt;node-vibrant&lt;&#x2F;a&gt;. Random song and band names are based on &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tirdadc&#x2F;synthwave&quot;&gt;Synthgen 2000&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-sound&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#the-sound&quot; aria-label=&quot;Anchor link for: the-sound&quot;&gt;#&lt;&#x2F;a&gt;
The sound&lt;&#x2F;h2&gt;
&lt;p&gt;The “music” is generated with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Tonejs&#x2F;Tone.js&quot;&gt;Tone.js&lt;&#x2F;a&gt;, mostly from samples created with &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;spaces&#x2F;harmonai&#x2F;dance-diffusion&quot;&gt;Dance Diffusion&lt;&#x2F;a&gt; using the &lt;code&gt;glitch-440k&lt;&#x2F;code&gt; model and then automatically split on transients.&lt;&#x2F;p&gt;
&lt;p&gt;The samples are organized in kits, of which there are nine at the moment. Kits one through six contain the Dance Diffusion samples, kits seven through nine contain more traditional drum sounds of the 707&#x2F;808&#x2F;909 variety, and some keys. Those kits are generally more pleasant to listen to, but since the kits are chosen at random on load, Space is only pleasant about every third visit.&lt;&#x2F;p&gt;
&lt;p&gt;Each sample in a kit is represented by a channel. On load, a pattern is semi-randomly set on each channel. As long as “Auto-evolve” is ticked, this pattern will change over time, creating a never*-repeating soundscape.
(* Never as in “very seldom”)&lt;&#x2F;p&gt;
&lt;p&gt;If you want to create your own sequence, simply clear the playing sequence, disable auto-evolve and create your own sequence by clicking the corresponding dots.&lt;&#x2F;p&gt;
&lt;p&gt;Hitting “Save” will save the current state of your composition in the URL, copy it from the address bar to share or to keep it safe somewhere. Or bookmark it!&lt;&#x2F;p&gt;
&lt;p&gt;Channel 10 has a special role (no, it’s not a drum track, sorry MIDI heads) – everytime a note is struck on it, it either plays the sample for that track, or a short sine note. The sine note is picked randomly on each play, from an array of notes (usually a scale) picked randomly on each load. The octave is also set randomly for each note, ranging from 2 to 7. Finally, the duration is set randomly from an eighth note to a sixty-fourth note, with shorter notes being a bit more likely.&lt;&#x2F;p&gt;
&lt;p&gt;The prompt for ImaginAIry – for anyone interested – was “70’s sci-fi landscape”, the full comand was:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;imagine&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;70&amp;#39;s sci-fi landscape&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;w&lt;&#x2F;span&gt; 1024&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;h&lt;&#x2F;span&gt; 256&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; 100&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;tile&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then I went for a walk while that toasted my battery. From those one hundred images I picked the 78 I liked the best.&lt;&#x2F;p&gt;
&lt;p&gt;Another way to toast your battery is to leave Space running in an open browser tab :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Rotnot</title>
        <published>2020-12-06T00:00:00+00:00</published>
        <updated>2020-12-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/rotnot/"/>
        <id>https://spitlo.com/code/rotnot/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/rotnot/">&lt;p&gt;Rotnot tries to figure out the notes of sound samples based on their filename, and save that note as meta data in the file.&lt;&#x2F;p&gt;
&lt;p&gt;At the moment it works on a bunch of multi sampled instruments I had available, where the filenames were either:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Note+octave (&lt;code&gt;a#4.wav&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Collection_name-note+octave (&lt;code&gt;MutedTrumpet-Bb2.wav&lt;&#x2F;code&gt;); or&lt;&#x2F;li&gt;
&lt;li&gt;The actual midi note (&lt;code&gt;031.wav&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The midi note is then written back to the wave file as part of the “Sampler Chunk”, in the &lt;code&gt;MIDI Unity Note&lt;&#x2F;code&gt; field.&lt;&#x2F;p&gt;
&lt;p&gt;The “Instrument Chunk” has a field with similar purpose, &lt;code&gt;MIDI Unshifted Note&lt;&#x2F;code&gt;. Future versions might write to that as well.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;usage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot; aria-label=&quot;Anchor link for: usage&quot;&gt;#&lt;&#x2F;a&gt;
Usage&lt;&#x2F;h2&gt;
&lt;p&gt;In the &lt;code&gt;rotnot&lt;&#x2F;code&gt; directory, enter:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;node&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; index.js&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;rationale&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#rationale&quot; aria-label=&quot;Anchor link for: rationale&quot;&gt;#&lt;&#x2F;a&gt;
Rationale&lt;&#x2F;h2&gt;
&lt;p&gt;I own a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;1010music.com&#x2F;product&#x2F;blackbox&quot;&gt;1010music blackbox hardware sampler&lt;&#x2F;a&gt;. It can load a folder of samples as a multi-sample instrument, but it doesn’t use filenames for note recognition. So I use this to prepare sample packs before moving them to the SD card.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Revercss</title>
        <published>2020-12-05T00:00:00+00:00</published>
        <updated>2020-12-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/revercss/"/>
        <id>https://spitlo.com/code/revercss/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/revercss/">&lt;p&gt;Revercss, sometimes stylized as ƨƨↄ, was made as a joke many years ago, and “marketed” as&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;a declaration-first paradigm for lean, consistent CSS and increased project maintainibility&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;But I still kinda like the idea, especially for small projects.&lt;&#x2F;p&gt;
&lt;p&gt;I also made &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;gulp-revercss&#x2F;&quot;&gt;a gulp plugin for it&lt;&#x2F;a&gt; when that was still a thing.&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps I should make a syntax highlighting scheme for it as well.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#syntax&quot; aria-label=&quot;Anchor link for: syntax&quot;&gt;#&lt;&#x2F;a&gt;
Syntax&lt;&#x2F;h2&gt;
&lt;p&gt;In Revercss, style declarations are first-class citizens. Selectors belong to one or many declarations:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;css&quot; class=&quot;language-css z-code&quot;&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;color: red &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;a&lt;&#x2F;span&gt;, &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;h&lt;&#x2F;span&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;color: rgba(100&lt;span class=&quot;z-punctuation z-separator z-sequence z-css&quot;&gt;,&lt;&#x2F;span&gt; 0&lt;span class=&quot;z-punctuation z-separator z-sequence z-css&quot;&gt;,&lt;&#x2F;span&gt; 0&lt;span class=&quot;z-punctuation z-separator z-sequence z-css&quot;&gt;,&lt;&#x2F;span&gt; .5&lt;&#x2F;span&gt;) &lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  #&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;logo&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;ul&lt;&#x2F;span&gt;.&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;menu&lt;&#x2F;span&gt;&amp;gt;&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;li&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;a&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;border: 2px solid &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;button&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  #&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;logo&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;ul&lt;&#x2F;span&gt;.&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;menu&lt;&#x2F;span&gt;&amp;gt;&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;li&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;a&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-custom z-css&quot;&gt;text-decoration&lt;&#x2F;span&gt;: none &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;ul&lt;&#x2F;span&gt;.&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;menu&lt;&#x2F;span&gt;&amp;gt;&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;li&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;a&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-custom z-css&quot;&gt;min-width&lt;&#x2F;span&gt;: 200px &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;button&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;input&lt;&#x2F;span&gt;[&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;type&lt;&#x2F;span&gt;=&amp;quot;&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;text&lt;&#x2F;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;padding: 8px &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;button&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;input&lt;&#x2F;span&gt;,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;ul&lt;&#x2F;span&gt;.&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;menu&lt;&#x2F;span&gt;&amp;gt;&lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;li&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;a&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-custom z-css&quot;&gt;box-sizing&lt;&#x2F;span&gt;: &lt;span class=&quot;z-entity z-name z-tag z-custom z-css&quot;&gt;border-box&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  &lt;span class=&quot;z-meta z-property-name z-css&quot;&gt;html&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-selector z-css&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-custom z-css&quot;&gt;box-sizing&lt;&#x2F;span&gt;: inherit &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;  *, *&lt;span class=&quot;z-punctuation z-separator z-key-value z-css&quot;&gt;:&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-property-value z-css&quot;&gt;before, *:after
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-list z-css&quot;&gt;&lt;span class=&quot;z-meta z-property-value z-css&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-property-list z-css&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-css&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;usage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#usage&quot; aria-label=&quot;Anchor link for: usage&quot;&gt;#&lt;&#x2F;a&gt;
Usage&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;console-output&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#console-output&quot; aria-label=&quot;Anchor link for: console-output&quot;&gt;#&lt;&#x2F;a&gt;
Console output&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;revercss&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; example.revcss&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;file-output&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#file-output&quot; aria-label=&quot;Anchor link for: file-output&quot;&gt;#&lt;&#x2F;a&gt;
File output&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;revercss&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; example.revcss&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; parsed.css&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;from-stdin&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#from-stdin&quot; aria-label=&quot;Anchor link for: from-stdin&quot;&gt;#&lt;&#x2F;a&gt;
From stdin&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cat&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; example.revcss&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;revercss&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;options&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#options&quot; aria-label=&quot;Anchor link for: options&quot;&gt;#&lt;&#x2F;a&gt;
Options&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;txt&quot; class=&quot;language-txt z-code&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -c, --compact
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Output compact CSS
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -m, --minified
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Output minified CSS
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -t, --tabs
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Use tabs instead of spaces in output
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -s, --spaces
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Number of spaces&#x2F;tabs to indent (default: 2)
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -o, --outfile &amp;lt;file&amp;gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Write to FILE rather than the console
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;  -h, --help
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;          Display help and usage details
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dotfiles</title>
        <published>2020-11-26T00:00:00+00:00</published>
        <updated>2020-11-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/dotfiles/"/>
        <id>https://spitlo.com/code/dotfiles/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/dotfiles/">&lt;p&gt;I keep most of my aliases, functions and config files in a dotfiles repo. They are currently used on two Macs running Mojave, one Pinebook Pro running Manjaro, an Android running Termux on LineageOS and on several instances of Ubuntu Server, so I try to make sure everything’s portable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this stuff probably only makes sense for me, but there are a few gems here and there that might be of use for others as well.&lt;&#x2F;p&gt;
&lt;p&gt;Below are a few of my most used functions&#x2F;aliases:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cdp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#cdp&quot; aria-label=&quot;Anchor link for: cdp&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L438-L484&quot;&gt;&lt;code&gt;cdp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This allows me to jump quickly into project folders. If the project contains an &lt;code&gt;.nvmrc&lt;&#x2F;code&gt; or &lt;code&gt;.python-version&lt;&#x2F;code&gt; file, the correct versions of &lt;code&gt;node&lt;&#x2F;code&gt; and &lt;code&gt;python&lt;&#x2F;code&gt; are set.&lt;&#x2F;p&gt;
&lt;p&gt;The function uses &lt;code&gt;$PROJECT_FOLDER&lt;&#x2F;code&gt; to know where to look. I set it in a file kept out of source control.&lt;&#x2F;p&gt;
&lt;p&gt;There is a corresponding &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;6f41ade4e2ff75e7ddb147d727ec8ad53917d87a&#x2F;.bash_completions&#x2F;cdp&quot;&gt;bash completion script&lt;&#x2F;a&gt;, so if I set &lt;code&gt;$LOCAL_PROJECTS&lt;&#x2F;code&gt; to a space separated string of project names, I get tab completion and can navigate EVEN QUICKER!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#xt&quot; aria-label=&quot;Anchor link for: xt&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L119-L156&quot;&gt;&lt;code&gt;xt&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This is so I never have to learn the flags for unrar, unzip, gunzip, tar et al. Cant’t remember where I got this function from initially, but here’s the obligatory &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;xkcd.com&#x2F;&quot;&gt;XKCD&lt;&#x2F;a&gt; strip:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;imgs.xkcd.com&#x2F;comics&#x2F;tar.png&quot; alt=&quot;XKCD: Tar&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qrab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#qrab&quot; aria-label=&quot;Anchor link for: qrab&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L706-L712&quot;&gt;&lt;code&gt;qrab&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;This uses &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fukuchi&#x2F;libqrencode&quot;&gt;&lt;code&gt;qrencode&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to create a QR code from whatever is in the clipboard and print it to the terminal. Very helpful when I need to move small pieces of information from my laptop to my phone quickly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;weather&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#weather&quot; aria-label=&quot;Anchor link for: weather&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L771-L773&quot;&gt;&lt;code&gt;weather&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I can never remember where to &lt;code&gt;curl&lt;&#x2F;code&gt; the weather from and what query strings to use, so now I just run &lt;code&gt;weather london&lt;&#x2F;code&gt; to get the London weather in a compact form.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dict&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#dict&quot; aria-label=&quot;Anchor link for: dict&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;b601ed079b16e6651545f579d2a437f487af2965&#x2F;.functions#L527-L531&quot;&gt;&lt;code&gt;dict&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Basically the same as &lt;code&gt;weather&lt;&#x2F;code&gt; but for dictionary definitions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;squash&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#squash&quot; aria-label=&quot;Anchor link for: squash&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;squash&quot;&gt;&lt;code&gt;squash&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I work on some projects that’s been around since the early 2010s, and I need a local clone, including all assets, for them to work properly when developing. So I need to keep gigs and gigs of images just lying about on my harddrive. But they don’t need to look pretty. So every once in a while I run:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;find&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; .&#x2F;media&#x2F;images&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;xdev&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;name&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;*.jpg&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;mtime&lt;&#x2F;span&gt; +360&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;execdir&lt;&#x2F;span&gt; squash &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;squash&lt;&#x2F;code&gt; uses ImageMagicks’s &lt;code&gt;mogrify&lt;&#x2F;code&gt; to set the jpeg quality to one, then resets the file’s timestamp, to prevent possible overwrites when syncing with the production server. I can also run it with the environment variable &lt;code&gt;MINIMUM_SIZE&lt;&#x2F;code&gt; set, to only affect images of a significant size.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-tp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#update-tp&quot; aria-label=&quot;Anchor link for: update-tp&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;update-tp&quot;&gt;&lt;code&gt;update-tp&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;update-tp&lt;&#x2F;code&gt; helps me to update a &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termux&#x2F;termux-packages&quot;&gt;Termux package&lt;&#x2F;a&gt; in my fork, then create a consistently worded commit so I can do a PR. It’s pretty scary to contribute to popular projects and I want to make sure I get it right if I do.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#update&quot; aria-label=&quot;Anchor link for: update&quot;&gt;#&lt;&#x2F;a&gt;
&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spitlo&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;update&quot;&gt;&lt;code&gt;update&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;update&lt;&#x2F;code&gt; helps me keep some commands fresh across platforms, often by downloading the latest release from Github or similar and moving it to &lt;code&gt;~&#x2F;bin&lt;&#x2F;code&gt;. This was mostly created out of frustration with the way Homebrew works on macOS, but I use it on Android (&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termux&#x2F;termux-app&quot;&gt;Termux&lt;&#x2F;a&gt;) and Linux as well. At the time of writing, &lt;code&gt;update&lt;&#x2F;code&gt; supports updating the following commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheZoraiz&#x2F;ascii-image-converter&quot;&gt;ascii-image-converter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;bat&quot;&gt;bat&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;tildegit.org&#x2F;sloum&#x2F;bombadillo&quot;&gt;bombadillo&lt;&#x2F;a&gt; (Broken at the time)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;schollz&#x2F;croc&quot;&gt;croc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dandavison&#x2F;delta&quot;&gt;delta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ogham&#x2F;exa&quot;&gt;exa&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;fzf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;climech&#x2F;grit&quot;&gt;grit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gron&quot;&gt;gron&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;curl&#x2F;h2c&quot;&gt;h2c&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;hyperfine&quot;&gt;hyperfine&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stedolan&#x2F;jq&quot;&gt;jq&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zyedidia&#x2F;micro&quot;&gt;micro&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denisidoro&#x2F;navi&quot;&gt;navi&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xwmx&#x2F;nb&quot;&gt;nb&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starship&#x2F;starship&quot;&gt;starship&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spaam&#x2F;svtplay-dl&quot;&gt;svtplay-dl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wp-cli&#x2F;wp-cli&quot;&gt;wp-cli&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ytdl-org&#x2F;youtube-dl&quot;&gt;youtube-dl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&quot;&gt;zola&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Spitlo.com</title>
        <published>2020-11-15T00:00:00+00:00</published>
        <updated>2020-11-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://spitlo.com/code/spitlo-com/"/>
        <id>https://spitlo.com/code/spitlo-com/</id>
        
        <content type="html" xml:base="https://spitlo.com/code/spitlo-com/">&lt;p&gt;I made this site mainly to improve my HTML and UI skills, having done mostly React and back-end work the last few years.&lt;&#x2F;p&gt;
&lt;p&gt;I also wanted to try out &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; and get away from JavaScript for a while.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, it’s a nice low-stakes place to have some fun and try stuff out, for example:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Pages hosting with a custom domain name&lt;&#x2F;li&gt;
&lt;li&gt;GitHub Actions&lt;&#x2F;li&gt;
&lt;li&gt;Handcoded or programatically generated SVGs&lt;&#x2F;li&gt;
&lt;li&gt;Undocumented CSS stuff like animating the &lt;code&gt;content&lt;&#x2F;code&gt; value of &lt;code&gt;::before&lt;&#x2F;code&gt; and &lt;code&gt;::after&lt;&#x2F;code&gt; pseudo-elements&lt;&#x2F;li&gt;
&lt;li&gt;Newer&#x2F;partially supported HTML elements like &lt;code&gt;&amp;lt;details&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Ever so slightly dipping my toes into the Rust ecosystem&lt;&#x2F;li&gt;
&lt;li&gt;Using AVIF&lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;issues&#x2F;1202&quot;&gt;?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
